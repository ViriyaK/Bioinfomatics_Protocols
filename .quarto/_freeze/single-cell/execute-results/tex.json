{
  "hash": "78e8657b43225ad9eabd29aac720770d",
  "result": {
    "markdown": "---\nexecute:\n  eval: false\nformat:\n  html:\n    link-external-newwindow: true\n---\n\n\n\n# Single-Cell Analysis\n\nMost of these code are reliant on Seurat. You may now and then have to use scanpy in python, or revert to the SingleCellExperiment object utilized in scater.\n\n## Useful links and resources\n\nFine-tuning UMAP visualizations <https://jlmelville.github.io/uwot/abparams.html>\\\nTSNE animation <https://distill.pub/2016/misread-tsne/>\\\nSimple explanantion on TSNE <https://www.cancer.gov/about-nci/organization/ccg/blog/2020/interview-t-sne>\\\nDifferent integration methods <https://swaruplab.bio.uci.edu/tutorial/integration/integration_tutorial.html>\\\nIllustration of how UMAPs can be misleading <https://pair-code.github.io/understanding-umap/> <https://blog.bioturing.com/2022/01/14/umap-vs-t-sne-single-cell-rna-seq-data-visualization/>\n\nSingle cell best practices from the Theis lab <https://www.sc-best-practices.org/preamble.html> <https://broadinstitute.github.io/2019_scWorkshop/index.html>\n\nDeep explanation of Seurat's AddModuleScore function <https://www.waltermuskovic.com/2021/04/15/seurat-s-addmodulescore-function/>\n\n### Psudotime analysis\n\n<https://broadinstitute.github.io/2019_scWorkshop/functional-pseudotime-analysis.html>\\\nList of single cell pseudotime packages publishe#d <https://github.com/agitter/single-cell-pseudotime>\n\n### Spatial Transciptomics\n\n<https://scimap.xyz/tutorials/md/spatial_biology_scimap/>\n\n### Downloading data\n\nbam files uploaded to SRA will be missing certain 10x flags and will not work. You need to get the original bam files via SRA Data Access Tab and downloaded via wget and run bamtofastq.\\\nfor 10x, need to use --split-filles and --include-technical.\n\n### CellRanger\n\n## Seurat\n\n### Integration\n\n-   applying sctransform to each sample in the list\n-   selecting integration features,\n-   finding integration anchors,\n-   integrate data at this point, DefaultAssay is integrated, and there is an associated VariableFeatures, which really is output of SelectIntegrationFetures. rownames(integrated\\[\\[\"SCT\"\\]\\]@scale.data) is the same as SelectIntegration Features again.\\\n    https://github.com/satijalab/seurat/issues/6185 explanation of the different variable gene options from sct integrated models\n\nAfter `merge()` variable features that have been calculated by SCTransform is reset.\n\n### Plotting\n\nUse [scCustomize](https://samuel-marsh.github.io/scCustomize/index.html) for improved plotting over Seurat's defaults.\n\nTo plot heatmaps with extra metadata information, use the [scillius](https://scillus.netlify.app/) package.\n\nTo get statistics on differential gene levels, use the package `ggbetweenstats` from [ggstatsplot](https://indrajeetpatil.github.io/ggstatsplot/index.html).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncell_expression <- rna_integrated@assays$RNA@data[c(\"MIPOL1\", \"ETV1\", \"DGKB\", \"FOXA2\", \"AR\", \"SYP\"),] %>% as.matrix() %>% t()\nmeta_data <- rna_integrated@meta.data\nplot_data <- cbind(meta_data, cell_expression)\nsaveRDS(plot_data, \"scRNAseq_violin.RDS\")\n```\n:::\n\n\n\n### Utility functions\n\nRenaming all identities\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncell_types <- c(\"0\" = \"\", \"1\" = \"\", \"2\" = \"\", \"3\" = \"\", \"4\" = \"\", \"5\" = \"\", \"6\" = \"\")\nIdents(merged) <- \"SCT_snn_res.0.2\"\nmerged <- RenameIdents(merged, cell_types)\nmerged$status <- Idents(merged)\nDimPlot_scCustom(integrated, group.by = \"cell_types\", colors_use = polychrome_pal)\nmerged$status <- factor(merged$status, \n                        levels = c(\"\")) # useful for rearranging levels\nIdents(merged) <- \"status\"\n```\n:::\n\n\n\nRenaming a few identities\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_groups <- case_when(seu_obj$clust == \"a\" ~ \"Tumor\",\n          .default = seu_obj$clust) %>% as.factor()\nnames(new_groups) <- names(seu_obj$clust)\nseu_obj$new_groups <- new_groups\nseu_obj$new_groups <- factor(seu_obj$new_groups, \n                        levels = c(\"\")) # have to do this again\n```\n:::\n\n\n\nAdding new clusters, cluster 13 was not present previously\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseu_obj$manual_clusters <- seu_obj$integrated_snn_res.0.6\nlevels(seu_obj$manual_clusters) <- c(levels(seu_obj$manual_clusters), \"13\")\nseu_obj$manual_clusters[names(seu_obj$manual_clusters) %in% select_cells] <- \"13\"\n```\n:::\n",
    "supporting": [
      "single-cell_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}